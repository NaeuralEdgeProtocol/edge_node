# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main Build and push Arm64 CPU (no tagging)

on:
  workflow_run:
    workflows: [Tag main commit with version number]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Checkout code
      #   uses: actions/checkout@v3

      - name: Checkout submodule core -- pull submodule
        uses: actions/checkout@v3
        with:
          repository: DecentrAI/core
          path: core

      - name: Checkout submodule core
        run:
          git submodule update --init --recursive


      - name: Retrieve version
        id: retrieve_version
        run: |
          echo "VERSION=$(cat ver.py | grep -o "'.*'")" >> $GITHUB_ENV
  
      - name: Create image tag
        id: create_image_tag
        run: |
          VERSION=${VERSION//\'/}
          echo "IMAGE_TAG=naeural/edge_node:rpi-$VERSION" >> $GITHUB_ENV
        env:
          VERSION: ${{ env.VERSION }}

      - name: Debug version
        run: |
          VERSION=${VERSION//\'/}
          echo "Version to tag: '$VERSION'"
        env:
          VERSION: ${{ env.VERSION }}


      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "naeural/naeural-builder"

      - name: Cleanup space
        run: |
              echo "===========docker buildx du ==================="
              docker buildx du
              echo "===========docker buildx prune -f. Add -af if any other space issues. ============"
              docker buildx prune -f
              echo "===========docker buildx du ================="
              docker buildx du
              echo "========================================"
    

      - name: Build and push Arm64 CPU
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_rpi
          push: true
          tags: ${{ env.IMAGE_TAG }} 
          platforms: linux/arm64

